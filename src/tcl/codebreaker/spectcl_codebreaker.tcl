#package provide CodeBreaker 1.0
# spectcl_codebreaker.tcl --
#
# UI generated by GUI Builder Build 146 on 2015-09-15 18:55:14 from:
#    C:/Users/Public/archive/github/codebreaker/projects/tcl/spectcl/spectcl_codebreaker.ui
# This file is auto-generated.  Only the code within
#    '# BEGIN USER CODE'
#    '# END USER CODE'
# and code inside the callback subroutines will be round-tripped.
# The proc names 'ui' and 'init' are reserved.
#

package require Tk 8.4

# Declare the namespace for this dialog
namespace eval spectcl_codebreaker {}

# Source the ui file, which must exist
set spectcl_codebreaker::SCRIPTDIR [file dirname [info script]]
source [file join $spectcl_codebreaker::SCRIPTDIR spectcl_codebreaker_ui.tcl]

# BEGIN USER CODE

# END USER CODE class


# END USER CODE

# BEGIN CALLBACK CODE
# ONLY EDIT CODE INSIDE THE PROCS.

# spectcl_codebreaker::_button_1_command --
#
# Callback to handle _button_1 widget option -command
#
# ARGS:
#    <NONE>
#
proc spectcl_codebreaker::button1Cmd_command args {
    spectcl_codebreaker::guessCmd
}

# spectcl_codebreaker::_button_2_command --
#
# Callback to handle _button_2 widget option -command
#
# ARGS:
#    <NONE>
#
proc spectcl_codebreaker::button2Cmd_command args {
    spectcl_codebreaker::newGameCmd
}

# spectcl_codebreaker::_button_3_command --
#
# Callback to handle _button_3 widget option -command
#
# ARGS:
#    <NONE>
#
proc spectcl_codebreaker::button3Cmd_command args {
    spectcl_codebreaker::aboutCmd
}

# spectcl_codebreaker::_button_4_command --
#
# Callback to handle _button_4 widget option -command
#
# ARGS:
#    <NONE>
#
proc spectcl_codebreaker::button4Cmd_command args {
    spectcl_codebreaker::exitCmd
}

# spectcl_codebreaker::_entry_1_invalidcommand --
#
# Callback to handle _entry_1 widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
proc spectcl_codebreaker::_entry_1_invalidcommand args {}

# spectcl_codebreaker::_entry_1_validatecommand --
#
# Callback to handle _entry_1 widget option -validatecommand
#
# ARGS:
#    <NONE>
#
proc spectcl_codebreaker::_entry_1_validatecommand args {}

# spectcl_codebreaker::_entry_1_xscrollcommand --
#
# Callback to handle _entry_1 widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
proc spectcl_codebreaker::_entry_1_xscrollcommand args {}

# spectcl_codebreaker::_listbox_1_yscrollcommand --
#
# Callback to handle _listbox_1 widget option -yscrollcommand
#
# ARGS:
#    <NONE>
#
proc spectcl_codebreaker::_listbox_1_yscrollcommand args {}

# END CALLBACK CODE

# spectcl_codebreaker::init --
#
#   Call the optional userinit and initialize the dialog.
#   DO NOT EDIT THIS PROCEDURE.
#
# Arguments:
#   root   the root window to load this dialog into
#
# Results:
#   dialog will be created, or a background error will be thrown
#
proc spectcl_codebreaker::init {root args} {
    # Catch this in case the user didn't define it
    catch {spectcl_codebreaker::userinit}
    if {[info exists embed_args]} {
	# we are running in the plugin
	spectcl_codebreaker::ui $root
    } elseif {$::argv0 == [info script]} {
	# we are running in stand-alone mode
	wm title $root spectcl_codebreaker
	if {[catch {
	    # Create the UI
	    spectcl_codebreaker::ui  $root
	} err]} {
	    bgerror $err ; exit 1
	}
    }
    catch {spectcl_codebreaker::run $root}
}

#spectcl_codebreaker::init .

